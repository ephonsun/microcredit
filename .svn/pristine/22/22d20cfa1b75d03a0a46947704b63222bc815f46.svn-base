<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns="http://java.sun.com/xml/ns/javaee"
	 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	 version="3.0">

 	<display-name>SmartPhone App</display-name>
	<!-- 允许分布式处理 -->
	<distributable />
	<welcome-file-list>
	<welcome-file>/index.jsp</welcome-file>
</welcome-file-list>

	<!-- session有效时间  单位分-->
  	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- listener -->

	<!-- 加载Spring -->
	<context-param>
 		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath*:/applicationContext-sqlMaps.xml
            classpath*:/applicationContext-dao.xml
            classpath*:/applicationContext-service.xml
            classpath*:/applicationContext-ws.xml
            classpath*:/applicationContext-jobs.xml
            classpath:/applicationContext-datasource.xml
            <!--/WEB-INF/xfire-servlet.xml-->
		</param-value>
	</context-param>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>/WEB-INF/classes/log4j2.xml</param-value>
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- session监听 -->
	<listener>
		<listener-class>banger.common.listener.SessionListener</listener-class>
	</listener>

    <!--  数据 库链接初始化-->
    <listener>
        <listener-class>banger.common.listener.DataSourceListener</listener-class>
    </listener>

	<!-- 文件上传服务 ZMQ -->
	<listener>
		<listener-class>banger.zmq.ZMQServerListener</listener-class>
	</listener>


	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/applicationContext-webmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<!-- 所有的的请求，都会被DispatcherServlet处理 -->
		<url-pattern>*.html</url-pattern>
	</servlet-mapping>

	<!-- quartz定时任务监听 -->
	<listener>
		<listener-class>banger.quartz.listener.QuartzListener</listener-class>
	</listener>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>sqlScriptFilter</filter-name>
		<filter-class>banger.common.filter.SqlScriptFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>sqlScriptFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>

	<!--spring mvc不对静态文件拦截
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.jpg</url-pattern>
	</servlet-mapping>
	-->

	<!-- xfire
    <servlet>
		<servlet-name>xfire</servlet-name>
		<servlet-class>org.codehaus.xfire.spring.XFireSpringServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>xfire</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>
	-->
	<context-param>
		<param-name>com.sun.faces.sendPoweredByHeader</param-name>
		<param-value>false</param-value>
	</context-param>

	<resource-ref>
		<description>ORACLEConnection Pool</description>
		<res-ref-name>jdbc/microdb</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

</web-app>
